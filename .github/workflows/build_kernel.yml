name: Build Linux Mainline Kernel

on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    # timeout-minutes: 1

    steps:
      # 使用第三方工具释放空间
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false
          
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      # 清理无用软件释放空间
      - name: Remove pkgs
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /etc/mysql /etc/php
          sudo -E apt-get -y purge azure-cli* docker* ghc* zulu* hhvm* llvm* firefox* google* dotnet* aspnetcore* powershell* openjdk* adoptopenjdk* mysql* php* mongodb* moby* snap* || true
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean

      # 克隆当前仓库（用于获取依赖）
      - name: Checkout current repository
        uses: actions/checkout@v4
      
      # 安装必要的工具和依赖
      - name: Install build tools and dependencies
        run: |
          sudo apt-get update &&
          sudo apt-get install -y \
            dpkg-dev fakeroot libelf-dev \
            curl debhelper rsync libssl-dev build-essential \
            git flex bc bison make
          df -h

      # 下载 Linux Kernel 内核代码
      - name: Download kernel code
        run: |
          curl -fsSL https://git.kernel.org/torvalds/t/linux-6.14-rc7.tar.gz -o kernel.tar.gz
          tar xvpf kernel.tar.gz

      # 配置编译选项并下载依赖
      - name: Configure the kernel
        run: |
          cp kernel.config linux-6.14-rc6/.config
          cd linux-6.14-rc6 && 
          # make menuconfig &&
          make prepare
      
      # 编译内核
      - name: Build the kernel
        run: |
          cd linux-6.14-rc6 && 
          make -j$(nproc)
      
      # 添加 git repository
      - name: Add git repository
        run: |
          cd linux-6.14-rc6 &&
          git init &&
          git config --global --add safe.directory $(pwd) &&
          git config --global user.email "you@example.com" &&
          git config --global user.name "Your Name" &&
          git add . &&
          git commit -m "add files"

      # 生成 deb 包
      - name: Create deb package
        run: |
          cd linux-6.14-rc6 && 
          make deb-pkg &&
          cd .. &&
          mkdir build &&
          cp *.deb build/

      # 保留deb 包
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: ${{ github.workspace }}/build/
